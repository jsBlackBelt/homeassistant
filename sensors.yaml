# ##########################################################################
# Unifi
# ##########################################################################
- platform: unifigateway
  host: !secret unifi_controller
  username: !secret unifi_username
  password: !secret unifi_password
  monitored_conditions:
    - www
    - vpn
    - lan
    - wan
    - wlan
    - alerts
    - firmware

# ##########################################################################
# Power Consumptions
# ##########################################################################
# Espresso Consumption
- platform: integration
  source: input_number.continuous_espresso_machine_power
#  source: sensor.espresso_power
  method: right
  unit_prefix: k
  round: 2

- platform: template
  sensors:
    espresso_machine_consumption_today:
      value_template: >
        {{ (float(states.sensor.input_number_continuous_espresso_machine_power_integral.state) - float(states.input_number.midnight_espresso_machine_consumption.state)) | round(3) }}
#        {{ (float(states.sensor.sensor_espresso_power_integral.state) - float(states.input_number.midnight_espresso_consumption.state)) | round(3) }}
      unit_of_measurement: 'kWh'
      friendly_name: "Today's Espresso Consumption"

# Humidifier Consumption
- platform: integration
  source: input_number.continuous_humidifier_power
#  source: sensor.humidifier_power
  method: right
  unit_prefix: k
  round: 2

- platform: template
  sensors:
    humidifier_consumption_today:
      value_template: >
        {{ (float(states.sensor.input_number_continuous_humidifier_power_integral.state) - float(states.input_number.midnight_humidifier_consumption.state)) | round(3) }}
#        {{ (float(states.sensor.sensor_humidifier_power_integral.state) - float(states.input_number.midnight_humidifier_consumption.state)) | round(3) }}
      unit_of_measurement: 'kWh'
      friendly_name: "Today's Humidifier Consumption"

# Dehumidifier Consumption
- platform: integration
  source: input_number.continuous_dehumidifier_power
#  source: sensor.dehumidifier_power
  method: right
  unit_prefix: k
  round: 2

- platform: template
  sensors:
    dehumidifier_consumption_today:
      value_template: >
        {{ (float(states.sensor.input_number_continuous_dehumidifier_power_integral.state) - float(states.input_number.midnight_dehumidifier_consumption.state)) | round(3) }}
#        {{ (float(states.sensor.sensor_dehumidifier_power_integral.state) - float(states.input_number.midnight_dehumidifier_consumption.state)) | round(3) }}
      unit_of_measurement: 'kWh'
      friendly_name: "Today's Dehumidifier Consumption"

# Washing Machine Consumption
- platform: integration
  source: input_number.continuous_washing_machine_power
#  source: sensor.washing_machine_power
  method: right
  unit_prefix: k
  round: 2

- platform: template
  sensors:
    washing_machine_consumption_today:
      value_template: >
        {{ (float(states.sensor.input_number_continuous_washing_machine_power_integral.state) - float(states.input_number.midnight_washing_machine_consumption.state)) | round(3) }}
#        {{ (float(states.sensor.sensor_washing_machine_power_integral.state) - float(states.input_number.midnight_washing_machine_consumption.state)) | round(3) }}
      unit_of_measurement: 'kWh'
      friendly_name: "Today's Washing Machine Consumption"

# Dryer Consumption
- platform: integration
  source: input_number.continuous_dryer_power
#  source: sensor.dryer_power
  method: right
  unit_prefix: k
  round: 2

- platform: template
  sensors:
    dryer_consumption_today:
      value_template: >
        {{ (float(states.sensor.input_number_continuous_dryer_power_integral.state) - float(states.input_number.midnight_dryer_consumption.state)) | round(3) }}
#        {{ (float(states.sensor.sensor_dryer_power_integral.state) - float(states.input_number.midnight_dryer_consumption.state)) | round(3) }}
      unit_of_measurement: 'kWh'
      friendly_name: "Today's Dryer Consumption"

# Waterbed Consumption
- platform: integration
  source: input_number.continuous_waterbed_power
#  source: sensor.waterbed_power
  method: right
  unit_prefix: k
  round: 2

- platform: template
  sensors:
    waterbed_consumption_today:
      value_template: >
        {{ (float(states.sensor.input_number_continuous_waterbed_power_integral.state) - float(states.input_number.midnight_waterbed_consumption.state)) | round(3) }}
#        {{ (float(states.sensor.sensor_waterbed_power_integral.state) - float(states.input_number.midnight_waterbed_consumption.state)) | round(3) }}
      unit_of_measurement: 'kWh'
      friendly_name: "Today's Waterbed Consumption"

# ##########################################################################
# SolarEdge
# ##########################################################################
- platform: template
  sensors:
    solaredge_energy_this_year_template:
      value_template: "{{ (states('sensor.solaredge_energy_this_year') | float / 1000) | round(2) }}"

# ##########################################################################
# Pi-Hole
# ##########################################################################
#- platform: pi_hole
#  host: !secret pi_hole_ip
#  monitored_conditions:
#    - ads_blocked_today
#    - ads_percentage_today
#    - dns_queries_today
#    - domains_being_blocked
#    - queries_cached
#    - queries_forwarded
#    - unique_clients
#    - unique_domains
#    - clients_ever_seen

# ##########################################################################
# APC UPS
# ##########################################################################
- platform: apcupsd
  resources:
    - apc
    - date
    - version
    - upsname
    - upsmode
    - starttime
    - model
    - status
    - linev
    - loadpct
    - bcharge
    - timeleft
    - mbattchg
    - mintimel
    - maxtime
    - maxlinev
    - minlinev
    - outputv

# ##########################################################################
# Arlo
# ##########################################################################
#- platform: arlo
#  monitored_conditions:
#    - captured_today
#    - last_capture
#    - total_cameras
#    - battery_level
#    - signal_strength

- platform: aarlo
  monitored_conditions:
    - last_capture
    - total_cameras
    - battery_level
    - captured_today
    - signal_strength

# ##########################################################################
# Time & Date
# ##########################################################################
- platform: time_date
  display_options:
    - 'time'
    - 'date'

# ##########################################################################
# Weather
# ##########################################################################
- platform: darksky
  api_key: !secret dark_sky_api_key
  forecast:
    - 0
  language: de
  monitored_conditions:
    - summary
#    - icon
    - precip_type
    - precip_intensity
    - precip_probability
    - precip_accumulation
    - temperature
    - apparent_temperature
    - dew_point
    - wind_speed
    - wind_gust
    - wind_bearing
    - cloud_cover
    - humidity
    - pressure
    - visibility
    - ozone
    - minutely_summary
    - hourly_summary
    - daily_summary
    - temperature_high
    - temperature_low
    - apparent_temperature_high
    - apparent_temperature_low
    - precip_intensity_max
    - uv_index
    - moon_phase
    - sunrise_time
    - sunset_time
    - nearest_storm_distance
    - nearest_storm_bearing

# ##########################################################################
# Netatmo
# ##########################################################################
- platform: netatmo
  station: Villa
#  modules:
#    - Aussenmodul
#    - Regenmesser
#    - Windmesser
#    - Innenmodul
#      - temperature
#      - humidity
#      - co2
#      - wifi_status
#      - noise
#      - pressure

# ##########################################################################
# Gardena
# ##########################################################################
- platform: template
  sensors:
    gardena_water_control_battery_level:
      value_template: "{{ states.switch.water_control.attributes.battery_level }}"
      unit_of_measurement: '%'
      friendly_name: "Batteriestand"
    gardena_water_control_category:
      value_template: "{{ states.switch.water_control.attributes.category }}"
      friendly_name: "Kategorie"
    gardena_water_control_radio_quality:
      value_template: "{{ states.switch.water_control.attributes.radio_quality }}"
      unit_of_measurement: '%'
      friendly_name: "Qualität Wi-Fi"
    gardena_water_control_radio_contection_status:
      value_template: "{{ states.switch.water_control.attributes.radio_contection_status }}"
      friendly_name: "Verbindung Status"
    gardena_water_control_radio_state:
      value_template: "{{ states.switch.water_control.attributes.radio_state }}"
      friendly_name: "Verbindung Status"
    gardena_water_control_ambient_temperature:
      value_template: "{{ states.switch.water_control.attributes.ambient_temperature }}"
      unit_of_measurement: '°C'
      friendly_name: "Umgebungstemperatur"
    gardena_water_control_ambient_frost_warning:
#      value_template: "{{ states.switch.water_control.attributes.ambient_frost_warning }}"
#        {% if state_attr('states.switch.water_control', 'ambient_frost_warning') == 'no_frost') %}
      value_template: >-
        {% if state_attr('states.switch.water_control.attributes', 'ambient_frost_warning', 'no_frost') %}
          "no frost"
        {% else %}
          "{{ states.switch.water_control.attributes.ambient_frost_warning }}"
        {% endif %}
      friendly_name: "Frostwarnung"
    gardena_water_control_valve_open:
      value_template: >-
        {% if is_state('states.switch.water_control.attributes.valve_open', false) %}
          closed
        {% else %}
          "{{ states.switch.water_control.attributes.valve_open }}"
        {% endif %}
      friendly_name: "Bewässerung aktiv"
    gardena_water_control_manual_override:
      value_template: "{{ states.switch.water_control.attributes.manual_override }}"
      friendly_name: "Manuell gestartet"
    gardena_water_control_button_manual_override_time:
      value_template: "{{ states.switch.water_control.attributes.button_manual_override_time }}"
      unit_of_measurement: minutes
      friendly_name: "Manuelle Dauer"
    gardena_water_control_last_manual_override_time:
      value_template: "{{ states.switch.water_control.attributes.last_manual_override_time }}"
      friendly_name: "Manuelle letzte Dauer"
    gardena_water_control_scheduled_watering_next_start:
      value_template: "{{ ((as_timestamp(states.switch.water_control.attributes.scheduled_watering_next_start)) | timestamp_local) }}"
      friendly_name: "Nächster Start"
    gardena_water_control_schedules_watering_end:
      value_template: "{{ states.switch.water_control.attributes.schedules_watering_end }}"
      friendly_name: "Nächstes Ende"
    gardena_water_control_adaptive_scheduling_last_decision:
      value_template: "{{ states.switch.water_control.attributes.adaptive_scheduling_last_decision }}"
      friendly_name: "Adaptive Änderung"
    gardena_water_control_friendly_name:
      value_template: "{{ states.switch.water_control.attributes.friendly_name }}"
      friendly_name: "Name"

# ##########################################################################
# Measure Switches
# ##########################################################################
- platform: template
  sensors:
    pwr_dehumidifier:
      friendly_name: "Luftentfeuchter Leistung"
      unit_of_measurement: 'W'
      value_template: '{% if states.switch.luftentfeuchter %}{{ states.switch.luftentfeuchter.attributes.current_power_w }}{% else %}Off{% endif %}'
- platform: template
  sensors:
    pwr_dehumidifier_today:
      friendly_name: "Luftentfeuchter Leistung heute"
      unit_of_measurement: 'kWh'
      value_template: '{% if states.switch.luftentfeuchter %}{{ states.switch.luftentfeuchter.attributes.today_energy_kwh }}{% else %}Off{% endif %}'

- platform: template
  sensors:
    pwr_washingmachine:
      friendly_name: "Waschmaschine Leistung"
      unit_of_measurement: 'W'
      value_template: '{% if states.switch.waschmaschine %}{{ states.switch.waschmaschine.attributes.current_power_w }}{% else %}Off{% endif %}'
- platform: template
  sensors:
    pwr_washingmachine_today:
      friendly_name: "Waschmaschine Leistung heute"
      unit_of_measurement: 'kWh'
      value_template: '{% if states.switch.waschmaschine %}{{ states.switch.waschmaschine.attributes.today_energy_kwh }}{% else %}Off{% endif %}'

- platform: template
  sensors:
    pwr_dryer:
      friendly_name: "Trockner Leistung"
      unit_of_measurement: 'W'
      value_template: '{% if states.switch.trockner %}{{ states.switch.trockner.attributes.current_power_w }}{% else %}Off{% endif %}'
- platform: template
  sensors:
    pwr_dryer_today:
      friendly_name: "Trockner Leistung heute"
      unit_of_measurement: 'kWh'
      value_template: '{% if states.switch.trockner %}{{ states.switch.trockner.attributes.today_energy_kwh }}{% else %}Off{% endif %}'

- platform: template
  sensors:
    pwr_light_cellar:
      friendly_name: "Licht Keller Leistung"
      unit_of_measurement: 'W'
      value_template: '{% if states.light.keller %}{{ states.light.keller.attributes.power_consumption }}{% else %}Off{% endif %}'
- platform: template
  sensors:
    pwr_light_cellar_today:
      friendly_name: "Licht Keller Leistung heute"
      unit_of_measurement: 'kWh'
      value_template: '{% if states.light.keller %}{{ states.light.keller.attributes.energie_counter_kwh }}{% else %}Off{% endif %}'

# ##########################################################################
# Homematic
# ##########################################################################
- platform: template
  sensors:
    climate_living_room_level:
      friendly_name: "Wohnzimmer Heizung Niveau"
      value_template: '{{ states.climate.living_room.attributes.level }}'
      unit_of_measurement: '%'
- platform: template
  sensors:
    climate_living_room_current_temperature:
      friendly_name: "Wohnzimmer Heizung Temperatur aktuell"
      value_template: '{{ states.climate.living_room.attributes.current_temperature }}'
      unit_of_measurement: '°C'
- platform: template
  sensors:
    climate_living_room_temperature:
      friendly_name: "Wohnzimmer Heizung Temperatur soll"
      value_template: '{{ states.climate.living_room.attributes.temperature }}'
      unit_of_measurement: '°C'

- platform: template
  sensors:
    climate_living_room_sliding_door_level:
      friendly_name: "Wohnzimmer Heizung Schiebetür Niveau"
      value_template: '{{ states.climate.living_room_sliding_door.attributes.level }}'
      unit_of_measurement: '%'
- platform: template
  sensors:
    climate_living_room_sliding_door_current_temperature:
      friendly_name: "Wohnzimmer Heizung Schiebetür Temperatur aktuell"
      value_template: '{{ states.climate.living_room_sliding_door.attributes.current_temperature }}'
      unit_of_measurement: '°C'
- platform: template
  sensors:
    climate_living_room_sliding_door_temperature:
      friendly_name: "Wohnzimmer Heizung Schiebetür Temperatur soll"
      value_template: '{{ states.climate.living_room_sliding_door.attributes.temperature }}'
      unit_of_measurement: '°C'

- platform: template
  sensors:
    climate_entrance_level:
      friendly_name: "Eingang Heizung Niveau"
      value_template: '{{ states.climate.entrance.attributes.level }}'
      unit_of_measurement: '%'
- platform: template
  sensors:
    climate_entrance_current_temperature:
      friendly_name: "Eingang Heizung Temperatur aktuell"
      value_template: '{{ states.climate.entrance.attributes.current_temperature }}'
      unit_of_measurement: '°C'
- platform: template
  sensors:
    climate_entrance_temperature:
      friendly_name: "Eingang Heizung Temperatur soll"
      value_template: '{{ states.climate.entrance.attributes.temperature }}'
      unit_of_measurement: '°C'

- platform: template
  sensors:
    climate_amelie_level:
      friendly_name: "Amelie Heizung Niveau"
      value_template: '{{ states.climate.amelie.attributes.level }}'
      unit_of_measurement: '%'
- platform: template
  sensors:
    climate_amelie_current_temperature:
      friendly_name: "Amelie Heizung Temperatur aktuell"
      value_template: '{{ states.climate.amelie.attributes.current_temperature }}'
      unit_of_measurement: '°C'
- platform: template
  sensors:
    climate_amelie_temperature:
      friendly_name: "Amelie Heizung Temperatur soll"
      value_template: '{{ states.climate.amelie.attributes.temperature }}'
      unit_of_measurement: '°C'

- platform: template
  sensors:
    climate_marlene_level:
      friendly_name: "Marlene Heizung Niveau"
      value_template: '{{ states.climate.marlene.attributes.level }}'
      unit_of_measurement: '%'
- platform: template
  sensors:
    climate_marlene_current_temperature:
      friendly_name: "Marlene Heizung Temperatur aktuell"
      value_template: '{{ states.climate.marlene.attributes.current_temperature }}'
      unit_of_measurement: '°C'
- platform: template
  sensors:
    climate_marlene_temperature:
      friendly_name: "Marlene Heizung Temperatur soll"
      value_template: '{{ states.climate.marlene.attributes.temperature }}'
      unit_of_measurement: '°C'

- platform: template
  sensors:
    climate_bedroom_level:
      friendly_name: "Schlafzimmer Heizung Niveau"
      value_template: '{{ states.climate.bedroom.attributes.level }}'
      unit_of_measurement: '%'
- platform: template
  sensors:
    climate_bedroom_current_temperature:
      friendly_name: "Schlafzimmer Heizung Temperatur aktuell"
      value_template: '{{ states.climate.bedroom.attributes.current_temperature }}'
      unit_of_measurement: '°C'
- platform: template
  sensors:
    climate_bedroom_temperature:
      friendly_name: "Schlafzimmer Heizung Temperatur soll"
      value_template: '{{ states.climate.bedroom.attributes.temperature }}'
      unit_of_measurement: '°C'

- platform: template
  sensors:
    climate_studio_level:
      friendly_name: "Studio Heizung Niveau"
      value_template: '{{ states.climate.studio.attributes.level }}'
      unit_of_measurement: '%'
- platform: template
  sensors:
    climate_studio_current_temperature:
      friendly_name: "Studio Heizung Temperatur aktuell"
      value_template: '{{ states.climate.studio.attributes.current_temperature }}'
      unit_of_measurement: '°C'
- platform: template
  sensors:
    climate_studio_temperature:
      friendly_name: "Studio Heizung Temperatur soll"
      value_template: '{{ states.climate.studio.attributes.temperature }}'
      unit_of_measurement: '°C'

- platform: template
  sensors:
    climate_fitness_level:
      friendly_name: "Fitness Heizung Niveau"
      value_template: '{{ states.climate.fitness.attributes.level }}'
      unit_of_measurement: '%'
- platform: template
  sensors:
    climate_fitness_current_temperature:
      friendly_name: "Fitness Heizung Temperatur aktuell"
      value_template: '{{ states.climate.fitness.attributes.current_temperature }}'
      unit_of_measurement: '°C'
- platform: template
  sensors:
    climate_fitness_temperature:
      friendly_name: "Fitness Heizung Temperatur soll"
      value_template: '{{ states.climate.fitness.attributes.temperature }}'
      unit_of_measurement: '°C'

# ##########################################################################
# Sun Elevation
# ##########################################################################
- platform: template
  sensors:
    sun_elevation:
      friendly_name: "Sonnenstand Horizont"
      value_template: "{{ state_attr('sun.sun', 'elevation') }}"
      unit_of_measurement: 'degrees'

# ##########################################################################
# Weather Warnings
# ##########################################################################
- platform: dwd_weather_warnings
  region_name: Erding

# ##########################################################################
# Scraper
# ##########################################################################

# ##########################################################################
# Media Players
# ##########################################################################
#- platform: plex
#  host: !secret plex_ip
#  port: !secret plex_port
#  name: Plex

# ##########################################################################
# Harmony
# ##########################################################################
- platform: template
  sensors:
    harmony_activity:
      friendly_name: "Harmony Activity"
      value_template: '{{ states.remote.living_room.attributes.current_activity }}'

# ##########################################################################
# MQTT iPhone Sensors
# ##########################################################################
- platform: mqtt
  state_topic: owntracks/markus/21B73B57-3F05-415B-BB0B-F5B7299CBEDC
  name: "Markus iPhone 11 Akku"
  unit_of_measurement: "%"
  value_template: '{{ value_json.batt }}'

- platform: mqtt
  state_topic: owntracks/magda/5B9E4342-2EF1-431E-AEE2-D85A7E9DB173
  name: "Magda iPhone 8 Akku"
  unit_of_measurement: "%"
  value_template: '{{ value_json.batt }}'

# ##########################################################################
# Special HASS related sensors
# ##########################################################################
- platform: version
  name: HA Installed Version
  scan_interval: 86400

- platform: command_line
  name: "HA Uptime"
  command: echo "$(($(date +%s) - $(date -d "$(head -n1 /config/home-assistant.log | cut -d' ' -f-2)" +%s)))"
  scan_interval: 720
  value_template: >-
    {% set uptime = value | int %}
    {% set seconds = uptime % 60 %}
    {% set minutes = ((uptime % 3600) / 60) | int %}
    {% set hours = ((uptime % 86400) / 3600) | int %}
    {% set days = (uptime / 86400) | int %}
    {%- if days > 0 -%}
      {%- if days == 1 -%}
        1 day
      {%- else -%}
        {{ days }} days
      {%- endif -%}
      {{ ', ' }}
    {%- endif -%}
    {%- if hours > 0 -%}
      {%- if hours == 1 -%}
        1 hour
      {%- else -%}
        {{ hours }} hours
      {%- endif -%}
      {{ ', ' }}
    {%- endif -%}
    {%- if minutes > 0 -%}
      {%- if minutes == 1 -%}
        1 minute
      {%- else -%}
        {{ minutes }} minutes
      {%- endif -%}
    {%- endif -%}
