# ##########################################################################
# Photovoltaic
# ##########################################################################
# Sonnen House Power Consumption
- alias: Sonnen House Power Consumption at start of the day
  trigger:
    platform: time
    at: '00:00:00'
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_sonnen_house_consumption_previous
        value: "{{ states.sensor.sonnen_house_consumption_today.state }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_sonnen_house_consumption
        value: "{{ states.sensor.sensor_sonnen_house_consumption_integral.state }}"

- alias: Sonnen House Power Consumption hourly
  trigger:
    platform: time_pattern
    hours: /1
    minutes: 00
    seconds: 00
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.hourly_sonnen_house_consumption_previous
        value: "{{ states.sensor.sonnen_house_consumption_hour.state }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.hourly_sonnen_house_consumption
        value: "{{ states.sensor.sensor_sonnen_house_consumption_integral.state }}"

# Sonnen Grid Feedin
- alias: Sonnen Grid Feedin at start of the day
  trigger:
    platform: time
    at: '00:00:00'
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_sonnen_pv_gridfeedin_previous
        value: "{{ states.sensor.sonnen_pv_gridfeedin_today.state }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_sonnen_pv_gridfeedin
        value: "{{ states.sensor.sensor_sonnen_pv_gridfeedin_integral.state }}"

- alias: Sonnen Grid Feedin hourly
  trigger:
    platform: time_pattern
    hours: /1
    minutes: 00
    seconds: 00
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.hourly_sonnen_pv_gridfeedin_previous
        value: "{{ states.sensor.sonnen_pv_gridfeedin_hour.state }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.hourly_sonnen_pv_gridfeedin
        value: "{{ states.sensor.sensor_sonnen_pv_gridfeedin_integral.state }}"

# Sonnen Inverter Power
- alias: Sonnen Inverter Power at start of the day
  trigger:
    platform: time
    at: '00:00:00'
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_sonnen_inverter_power_previous
        value: "{{ states.sensor.sonnen_inverter_power_today.state }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_sonnen_inverter_power
        value: "{{ states.sensor.sensor_sonnen_inverter_power_integral.state }}"

- alias: Sonnen Inverter Power hourly
  trigger:
    platform: time_pattern
    hours: /1
    minutes: 00
    seconds: 00
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.hourly_sonnen_inverter_power_previous
        value: "{{ states.sensor.sonnen_inverter_power_hour.state }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.hourly_sonnen_inverter_power
        value: "{{ states.sensor.sensor_sonnen_inverter_power_integral.state }}"

# Sonnen PV Production
- alias: Sonnen PV Production at start of the day
  trigger:
    platform: time
    at: '00:00:00'
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_sonnen_pv_production_previous
        value: "{{ states.sensor.sonnen_pv_production_today.state }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_sonnen_pv_production
        value: "{{ states.sensor.sensor_sonnen_pv_production_integral.state }}"

- alias: Sonnen PV Production hourly
  trigger:
    platform: time_pattern
    hours: /1
    minutes: 00
    seconds: 00
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.hourly_sonnen_pv_production_previous
        value: "{{ states.sensor.sonnen_pv_production_hour.state }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.hourly_sonnen_pv_production
        value: "{{ states.sensor.sensor_sonnen_pv_production_integral.state }}"

# ##########################################################################
# Power Consumptions
# ##########################################################################
# Espresso Consumption
- alias: Espresso Consumption at start of the day
  trigger:
    platform: time
    at: '00:00:00'
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_espresso_consumption_previous
        value: "{{ states.sensor.espresso_consumption_today.state }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_espresso_consumption
        value: "{{ states.sensor.sensor_espresso_consumption_integral.state }}"

# Humidifier Consumption
- alias: Humidifier Consumption at start of the day
  trigger:
    platform: time
    at: '00:00:00'
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_humidifier_consumption_previous
        value: "{{ states.sensor.humidifier_consumption_today.state }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_humidifier_consumption
        value: "{{ states.sensor.sensor_humidifier_consumption_integral.state }}"

# Dehumidifier Consumption
- alias: Dehumidifier Consumption at start of the day
  trigger:
    platform: time
    at: '00:00:00'
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_dehumidifier_consumption_previous
        value: "{{ states.sensor.dehumidifier_consumption_today.state }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_dehumidifier_consumption
        value: "{{ states.sensor.sensor_dehumidifier_consumption_integral.state }}"

# Washing Machine Consumption
- alias: Washing Machine Consumption at start of the day
  trigger:
    platform: time
    at: '00:00:00'
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_washing_machine_consumption_previous
        value: "{{ states.sensor.washing_machine_consumption_today.state }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_washing_machine_consumption
        value: "{{ states.sensor.sensor_washing_machine_consumption_integral.state }}"

# Dryer Consumption
- alias: Dryer Consumption at start of the day
  trigger:
    platform: time
    at: '00:00:00'
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_dryer_consumption_previous
        value: "{{ states.sensor.dryer_consumption_today.state }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_dryer_consumption
        value: "{{ states.sensor.sensor_dryer_consumption_integral.state }}"

# Waterbed Consumption
- alias: Waterbed Consumption at start of the day
  trigger:
    platform: time
    at: '00:00:00'
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_waterbed_consumption_previous
        value: "{{ states.sensor.waterbed_consumption_today.state }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.midnight_waterbed_consumption
        value: "{{ states.sensor.sensor_waterbed_consumption_integral.state }}"

# ##########################################################################
# Robonect
# ##########################################################################
- id: 'robonect_command_mode'
  alias: Robonect Sileno Command Control
  trigger:
  - entity_id: input_select.robonect_command
    from: _
    platform: state
    to: start
  - entity_id: input_select.robonect_command
    from: _
    platform: state
    to: stop
  condition: []
  action:
  - data:
      payload_template: '{{ states(''input_select.robonect_command'') }}'
      topic: robonect/control
    service: mqtt.publish
  - data:
      entity_id: input_select.robonect_command
      option: _
    service: input_select.select_option
- id: 'robonect_command_control_mode'
  alias: Robonect Sileno Command Control Mode
  trigger:
  - entity_id: input_select.robonect_command
    from: _
    platform: state
    to: auto
  - entity_id: input_select.robonect_command
    from: _
    platform: state
    to: home
  - entity_id: input_select.robonect_command
    from: _
    platform: state
    to: man
  - entity_id: input_select.robonect_command
    from: _
    platform: state
    to: eod
  condition: []
  action:
  - data:
      payload_template: '{{ states(''input_select.robonect_command'') }}'
      topic: robonect/control/mode
    service: mqtt.publish
  - data:
      entity_id: input_select.robonect_command
      option: _
    service: input_select.select_option      

# ##########################################################################
# Telegram
# ##########################################################################
#- id: telegramboot
#  alias: Benachrichtigung beim Start
#  trigger:
#    - platform: homeassistant
#      event: start
#  action:
#    - service: notify.telegram
#      data: Home Assistant ist gestartet

# ##########################################################################
# Arlo
# ##########################################################################
- id: 'automation-0100'
  alias: Camera Snapshot
  trigger:
  - entity_id: camera.aarlo_vorplatz,camera.aarlo_sudgarten,camera.aarlo_westgarten,camera.aarlo_nordgarten
    for: 00:00:03
    from: 'idle'
    platform: state
    to: 'recording'
  - entity_id: camera.aarlo_vorplatz,camera.aarlo_sudgarten,camera.aarlo_westgarten,camera.aarlo_nordgarten
    for: 00:00:03
    from: 'recently active'
    platform: state
    to: 'recording'
  condition: []
  action:
  - data_template:
      entity_id: "{{ trigger.entity_id }}"
    service: camera.aarlo_request_snapshot

# ##########################################################################
# Zigbee Networkmap
# ##########################################################################
- id: update_networkmap
  alias: 'Zigbee Map aktualisieren'  
  hide_entity: true  
  trigger:
    platform: time_pattern
    minutes: '/10'
    seconds: 00
  action:
    service: zigbee2mqtt_networkmap.update

# ##########################################################################
# Startup Theme
# ##########################################################################
- id: activate_startup_theme
  alias: Setze Theme beim Start
  initial_state: 'on'
  trigger:
    - platform: homeassistant
      event: start
  action:
    service: frontend.set_theme
    data:
      name: dark_theme

- id: hyperion_activate_hdmi
  alias: Starte Hyperion Service beim Start
  trigger:
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: light.hyperion
      to: 'on'
  action:
    - service: light.turn_on
      data:
        entity_id: light.hyperion_service
        effect: "HDMI"

# ##########################################################################
# Zigbee
# ##########################################################################
- alias: Zigbee2mqtt Log Level
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.zigbee2mqtt_log_level
      to: debug
    - platform: state
      entity_id: input_select.zigbee2mqtt_log_level
      to: warn
    - platform: state
      entity_id: input_select.zigbee2mqtt_log_level
      to: error
    - platform: state
      entity_id: input_select.zigbee2mqtt_log_level
      to: info
  action:
    - service: mqtt.publish
      data:
        payload_template: '{{ states(''input_select.zigbee2mqtt_log_level'') }}'
        topic: zigbee2mqtt/bridge/config/log_level

- id: enable_zigbee_join
  alias: Enable Zigbee joining
  hide_entity: true
  trigger:
    platform: state
    entity_id: input_boolean.zigbee_permit_join
    to: 'on'
  action:
  - service: mqtt.publish
    data:
      topic: zigbee2mqtt/bridge/config/permit_join
      payload: 'true'
  - service: timer.start
    data:
      entity_id: timer.zigbee_permit_join

- id: disable_zigbee_join
  alias: Disable Zigbee joining
  hide_entity: true
  trigger:
  - entity_id: input_boolean.zigbee_permit_join
    platform: state
    to: 'off'
  action:
  - data:
      payload: 'false'
      topic: zigbee2mqtt/bridge/config/permit_join
    service: mqtt.publish
  - data:
      entity_id: timer.zigbee_permit_join
    service: timer.cancel

- id: disable_zigbee_join_timer
  alias: Disable Zigbee joining by timer
  hide_entity: true
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.zigbee_permit_join
  action:
  - service: mqtt.publish
    data:
      topic: zigbee2mqtt/bridge/config/permit_join
      payload: 'false'
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.zigbee_permit_join
